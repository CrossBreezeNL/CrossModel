// Dev-Container for CrossModel.
{
  "name": "Node.js & TypeScript",
  "build": {
    "dockerfile": "Dockerfile"
  },
  "features": {
    "ghcr.io/devcontainers/features/python:1": {
      "version": "3.11.4"
    }
  },
  "customizations": {
    "vscode": {
      "extensions": [
        "langium.langium-vscode",
        "esbenp.prettier-vscode",
        "eamodio.gitlens",
        "davidanson.vscode-markdownlint",
        "ms-playwright.playwright",
        "dbaeumer.vscode-eslint",
        "orta.vscode-jest"
      ]
    }
  },
  // Allow port 3000 to be forwarded.
  "forwardPorts": [3000],
  "portsAttributes": {
    "3000": {
      "label": "Theia Backend" //,
      // "onAutoForward": "openBrowserOnce"
    }
  },
  // Install the playwright dependencies.
  "postCreateCommand": "yarn playwright install --with-deps",
  // PlayWright with headed Chromium seems to work yet wih the current config for mounts and containerEnv.
  // There are some articles about it being possible:
  //  - https://playwright.dev/docs/docker
  //  - https://stackoverflow.com/questions/73092750/how-to-show-gui-apps-from-docker-desktop-container-on-windows-11
  //  - https://github.com/microsoft/wslg/issues/782
  "mounts": [
    {
      "source": "/run/desktop/mnt/host/wslg/.X11-unix",
      "target": "/tmp/.X11-unix",
      "type": "bind"
    },
    {
      "source": "/run/desktop/mnt/host/wslg",
      "target": "/mnt/wslg",
      "type": "bind"
    }
  ],
  "containerEnv": {
    "DISPLAY": ":0",
    "WAYLAND_DISPLAY": "wayland-0",
    "XDG_RUNTIME_DIR": "/mnt/wslg/runtime-dir",
    "PULSE_SERVER": "/mnt/wslg/PulseServer"
  }
}
