on:
  workflow_call:

env:
  NODE_VERSION: 16.20.0
  PYTHON_VERSION: 3.11.4

defaults:
  run:
    shell: bash

jobs:
  build-and-test:
    name: ${{ matrix.os }}

    strategy:
      fail-fast: false
      matrix:
        os: [windows-2019, ubuntu-latest, macos-11]

    runs-on: ${{ matrix.os }}
    timeout-minutes: 60

    steps:
      # Checkout the code.
      - name: checkout
        uses: actions/checkout@v4

      # Setup Node
      - name: Setup Node.js ${{ env.NODE_VERSION }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ env.NODE_VERSION }}

      # Setup Python
      - name: Setup Python ${{ env.PYTHON_VERSION }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ env.PYTHON_VERSION }}

      # Build the code.
      - name: Build
        # We set a timeout here as a fix for the timeout issues which sometimes occur when connecting the the npm repo.
        run: |
          yarn --skip-integrity-check --network-timeout 100000
          yarn build

      # Execute the tests.
      - name: Test
        run: yarn test
        env:
          # The test result file name can be controlled using the following environment variable.
          JEST_JUNIT_OUTPUT_NAME: unit-test-results-${{ runner.os }}.xml

      # Upload Test Results (The different files for the OSes will end up in the same artifact).
      - name: Upload Test Results
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: unit-test-tesults
          # Include the unit-test-results folders (which is in the root of the workspace).
          path: unit-test-results

      # Run lint only on Linux (since it only makes sense to run it once, and linux is the fastest).
      - name: Lint
        if: runner.os == 'Linux'
        run: yarn lint

  # Publish a test report using the test result files published in the previous step (executed per OS).
  publish-test-report:
    name: Publish Test Report
    needs: build-and-test
    runs-on: ubuntu-latest
    if: always()
    steps:
      # Download the test results artifacts.
      - name: Download Test Results
        uses: actions/download-artifact@v3
        with:
          name: unit-test-tesults
          path: unit-test-tesults
      # Publish Test Results
      - name: Publish Test Results
        uses: EnricoMi/publish-unit-test-result-action@v2
        with:
          check_name: Test Results
          files: |
            unit-test-tesults/**/*.xml
